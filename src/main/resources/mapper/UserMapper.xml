<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hnnd.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.hnnd.entity.User">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="mail" jdbcType="VARCHAR" property="mail" />
		<result column="wholename" jdbcType="VARCHAR" property="wholename" />
		<result column="startdate" jdbcType="DATE" property="startdate" />
        <result column="updatedate" jdbcType="DATE" property="updatedate" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" keyColumn="id" keyProperty="id"
		parameterType="com.hnnd.entity.User" useGeneratedKeys="true">
		insert into user (name, password,phone,mail,wholename,startdate)
		values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
		#{phone,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{wholename,jdbcType=VARCHAR},#{startdate,jdbcType=DATE})
	</insert>
	<update id="update" parameterType="com.hnnd.entity.User">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user
		set name = #{name,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		mail = #{mail,jdbcType=VARCHAR},
		wholename = #{wholename,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		startdate = #{startdate,jdbcType=DATE},
        updatedate = #{updatedate,jdbcType=DATE}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, name, password,phone,mail,wholename,startdate,updatedate
		from user
	</select>
	<select id="getTotal" resultType="java.lang.Integer">
		select count(*) from User
		
	</select>

	<select id="selectByPage" resultMap="BaseResultMap">
		select * from User
		<if test="start!=null and pageSize!=null">
			limit #{start},#{pageSize}
		</if>

	</select>
	
		<select id="selectByPage1" resultMap="BaseResultMap">
		select * from User <where>
		<if test="param!=null and key!=null">
		   #{param} like '%#{key}%'
		   </if>
		</where>
		<if test="start!=null and pageSize!=null">
			limit #{start},#{pageSize}
		</if>

	</select>
	
	<select id="selectByUname" parameterType="java.lang.String"  resultMap="BaseResultMap">
		select * from User where name = #{userName};
	</select>
	
    <select id="getTotalByParams" resultType="java.lang.Integer">
	     select count(*) from User
	     <where>
	     <if test="type!=null and keywords!=null">
	        ${type} like '%${keywords}%'
	     </if>
	     </where>
	</select>
	
    <select id="listByParams" resultMap="BaseResultMap">
		select * from User <where>
		<if test="type!=null and keywords!=null">
		   ${type} like '%${keywords}%'
		   </if>
		</where>
		<if test="start!=null and size!=null">
			limit ${start},${size}
		</if>

	</select>
</mapper>