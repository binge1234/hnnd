<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hnnd.dao.ApplyExamInfoMapper">
  <resultMap id="BaseResultMap" type="com.hnnd.entity.ApplyExamInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="course_id" jdbcType="INTEGER" property="course_id" />
    <result column="exam_classroom_id" jdbcType="INTEGER" property="exam_classroom_id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="result" jdbcType="INTEGER" property="result" />
    <result column="exam_number" jdbcType="VARCHAR" property="exam_number" />
    <result column="seat_number" jdbcType="INTEGER" property="seat_number" />
    <result column="location_id" jdbcType="INTEGER" property="location_id" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, course_id, exam_classroom_id, status, result, exam_number, seat_number,location_id
  </sql>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id,course_id,exam_classroom_id, status, result, exam_number, seat_number,location_id
    from apply_exam_info
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from apply_exam_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from apply_exam_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hnnd.entity.ApplyExamInfo" useGeneratedKeys="true">
    insert into apply_exam_info (user_id, course_id, exam_classroom_id, 
      status, result, exam_number, seat_number,location_id)
    values (#{user_id,jdbcType=INTEGER}, #{course_id,jdbcType=INTEGER}, #{exam_classroom_id,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{result,jdbcType=INTEGER}, #{exam_number,jdbcType=VARCHAR}, 
      #{seat_number,jdbcType=INTEGER},#{location_id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hnnd.entity.ApplyExamInfo" useGeneratedKeys="true">
    insert into apply_exam_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        user_id,
      </if>
      <if test="course_id != null">
        course_id,
      </if>
      <if test="exam_classroom_id != null">
        exam_classroom_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="exam_number != null">
        exam_number,
      </if>
      <if test="seat_number != null">
        seat_number,
      </if>
      <if test="location_id != null">
        location_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="course_id != null">
        #{course_id,jdbcType=INTEGER},
      </if>
      <if test="exam_classroom_id != null">
        #{exam_classroom_id,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        #{result,jdbcType=INTEGER},
      </if>
      <if test="exam_number != null">
        #{exam_number,jdbcType=VARCHAR},
      </if>
      <if test="seat_number != null">
        #{seat_number,jdbcType=INTEGER},
      </if>
      <if test="location_id != null">
        #{location_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hnnd.entity.ApplyExamInfo">
    update apply_exam_info
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="course_id != null">
        course_id = #{course_id,jdbcType=INTEGER},
      </if>
      <if test="exam_classroom_id != null">
        exam_classroom_id = #{exam_classroom_id,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=INTEGER},
      </if>
      <if test="exam_number != null">
        exam_number = #{exam_number,jdbcType=VARCHAR},
      </if>
      <if test="seat_number != null">
        seat_number = #{seat_number,jdbcType=INTEGER},
      </if>
      <if test="location_id != null">
        location_id = #{location_id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hnnd.entity.ApplyExamInfo">
    update apply_exam_info
    set user_id = #{user_id,jdbcType=INTEGER},
      course_id = #{course_id,jdbcType=INTEGER},
      exam_classroom_id = #{exam_classroom_id,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      result = #{result,jdbcType=INTEGER},
      exam_number = #{exam_number,jdbcType=VARCHAR},
      seat_number = #{seat_number,jdbcType=INTEGER},
      location_id = #{location_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getTotal" resultType="java.lang.Integer">
  select count(*) from apply_exam_info;
  </select>
  <select id="selectByPage" resultMap="BaseResultMap">
  select * from apply_exam_info 
          <if test="start!=null and pageSize!=null">
                    limit #{start},#{pageSize}
            </if>
  
  </select>
  <select id="selectByUidCid" resultType="com.hnnd.entity.ApplyExamInfo">
		select *
		from apply_exam_info
		where user_id = #{user_id,jdbcType=INTEGER} and course_id = #{course_id,jdbcType=INTEGER}
	</select>
</mapper>