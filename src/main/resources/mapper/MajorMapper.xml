<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hnnd.dao.MajorMapper">
  <resultMap id="BaseResultMap" type="com.hnnd.entity.Major">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status"  property="status" 
    typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
    <result column="flag"  property="flag" 
    typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
    <result column="area" jdbcType="VARCHAR" property="area"/>
    <result column="details" jdbcType="LONGVARCHAR" property="details"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from major
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hnnd.entity.Major" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into major (name, status, flag, 
      area, details)
    values (#{name,jdbcType=VARCHAR}, #{status,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}, 
       #{flag,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}, 
       #{area,jdbcType=VARCHAR}, #{details,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hnnd.entity.Major" >
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update major
    set name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      area = #{area,jdbcType=VARCHAR},
      details = #{details,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, name, status, flag, area, details
    from major
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, name, status, flag, area, details
    from major
  </select>
  
  <select id="selectByPage" resultMap="BaseResultMap">
  select * from major 
          <if test="start!=null and pageSize!=null">
                    limit #{start},#{pageSize}
            </if>
  
  </select>
  
  <update id="updateByStatus" parameterType="com.hnnd.entity.Major">
  update major set status = #{status,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler} where id = #{id}
  </update>
  
   <update id="updateByFlag" parameterType="com.hnnd.entity.Major">
   update major set flag = #{flag,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler} where id = #{id}
  </update>
  
  <select id="getTotal" resultType="java.lang.Integer">
  select count(*) from Major;
  </select>
  
  <select id="selectNoLocationMajor" resultMap="BaseResultMap">
  select res_id as id, res_name as name
  from(select DISTINCT id as res_id, name as res_name from major
	   union all
	   select DISTINCT major.id as res_id, major.name as res_name from major join exam_location on major.id=exam_location.majorid
       )TEMP
  GROUP BY res_id having count(res_id)=1;
  </select>
  
</mapper>