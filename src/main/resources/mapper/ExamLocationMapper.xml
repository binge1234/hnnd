<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hnnd.dao.ExamLocationMapper">
	<resultMap id="BaseResultMap"
		type="com.hnnd.entity.ExamLocation">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="location" jdbcType="VARCHAR"
			property="location" />
		<result column="location_status" jdbcType="INTEGER"
			property="location_status" />
		<result column="citycode" jdbcType="INTEGER"
			property="citycode" />
		<result column="districtcode" jdbcType="INTEGER"
			property="districtcode" />
		<result column="majorid" jdbcType="INTEGER"
			property="majorid" />
		<result column="capacity" jdbcType="INTEGER"
			property="capacity" />
		<result column="totalcapacity" jdbcType="INTEGER"
			property="totalcapacity" />
		<result column="code" jdbcType="INTEGER"
			property="code" />
	</resultMap>
	<sql id="Base_Column_List">
		id, location, location_status, citycode, districtcode, majorid,capacity,code
	</sql>
	<select id="selectAll" resultMap="BaseResultMap">
		select *
		from exam_location;
	</select>
	<select id="getTotal" resultType="java.lang.Integer">
		select count(*) from exam_location;
	</select>
	<select id="selectByPage" resultMap="BaseResultMap">
		select *
		from exam_location left join major on majorid=major.id
		<if test="start!=null and pageSize!=null">
			limit #{start},#{pageSize}
		</if>
	</select>
	
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select *
		<include refid="Base_Column_List" />
		from exam_location
		where id = #{id,jdbcType=INTEGER};
	</select>
	
	<select id="selectNewestId" resultType="com.hnnd.entity.ExamLocation">
		select id,citycode,districtcode 
		from exam_location natural join max_locationid
		where exam_location.id= max_locationid.id
	</select>
	
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from exam_location
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" keyColumn="id" keyProperty="id"
		parameterType="com.hnnd.entity.ExamLocation" useGeneratedKeys="false">
		insert into exam_location (location, location_status, citycode, districtcode, majorid, capacity)
		values (#{location,jdbcType=VARCHAR}, #{location_status,jdbcType=INTEGER},
		#{citycode,jdbcType=INTEGER}, #{districtcode,jdbcType=INTEGER}, 
		#{majorid, jdbcType=VARCHAR}, #{capacity, jdbcType=INTEGER} )
	</insert>
	<insert id="insertSelective" keyColumn="id" keyProperty="id"
		parameterType="com.hnnd.entity.ExamLocation" useGeneratedKeys="true">
		insert into exam_location
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="location != null">
				location,
			</if>
			<if test="location_status != null">
				location_status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="location != null">
				#{location,jdbcType=VARCHAR},
			</if>
			<if test="location_status != null">
				#{location_status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.hnnd.entity.ExamLocation">
		update exam_location
		<set>
			<if test="location != null">
				location = #{location,jdbcType=VARCHAR},
			</if>
			<if test="location_status != null">
				location_status = #{location_status,jdbcType=INTEGER},
			</if>
			<if test="majorid!= null">
				majorid = #{majorid,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER};
	</update>
	<update id="updateWithMajorNull"
		parameterType="com.hnnd.entity.ExamLocation">
		update exam_location
		set majorid=null
		where id=#{id,jdbcType=INTEGER};
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.hnnd.entity.ExamLocation">
		update exam_location
		set location = #{location,jdbcType=VARCHAR},
		location_status = #{location_status,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER};
	</update>
	<update id="updateWithCode"
		parameterType="com.hnnd.entity.ExamLocation">
		<!-- update scsystem.exam_location as a join max_locationid as b
		set a.code=#{code,jdbcType=VARCHAR}
		where a.id=b.id; -->
		update scsystem.exam_location
		set code=#{code,jdbcType=VARCHAR}
		where id=#{id,jdbcType=INTEGER};
	</update>
	<update id="updateTotalCapacity" statementType="CALLABLE">
		call updateLocationTotalCapacity(#{id,jdbcType=INTEGER,mode=IN});
	</update>
	 <select id="selectForApply" resultType="java.lang.Integer">
		select id
		from exam_location
		where citycode = #{citycode,jdbcType=INTEGER} and districtcode = #{districtcode,jdbcType=INTEGER} and majorid= #{majorid,jdbcType=INTEGER}
	</select>
</mapper>